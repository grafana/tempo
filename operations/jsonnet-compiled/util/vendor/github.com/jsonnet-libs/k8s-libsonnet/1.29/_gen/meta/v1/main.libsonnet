{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='v1', url='', help=''),
  apiGroup: (import 'apiGroup.libsonnet'),
  apiGroupList: (import 'apiGroupList.libsonnet'),
  apiResource: (import 'apiResource.libsonnet'),
  apiResourceList: (import 'apiResourceList.libsonnet'),
  apiVersions: (import 'apiVersions.libsonnet'),
  condition: (import 'condition.libsonnet'),
  deleteOptions: (import 'deleteOptions.libsonnet'),
  fieldsV1: (import 'fieldsV1.libsonnet'),
  groupVersionForDiscovery: (import 'groupVersionForDiscovery.libsonnet'),
  labelSelector: (import 'labelSelector.libsonnet'),
  labelSelectorRequirement: (import 'labelSelectorRequirement.libsonnet'),
  listMeta: (import 'listMeta.libsonnet'),
  managedFieldsEntry: (import 'managedFieldsEntry.libsonnet'),
  microTime: (import 'microTime.libsonnet'),
  objectMeta: (import 'objectMeta.libsonnet'),
  ownerReference: (import 'ownerReference.libsonnet'),
  patch: (import 'patch.libsonnet'),
  preconditions: (import 'preconditions.libsonnet'),
  serverAddressByClientCIDR: (import 'serverAddressByClientCIDR.libsonnet'),
  statusCause: (import 'statusCause.libsonnet'),
  statusDetails: (import 'statusDetails.libsonnet'),
  time: (import 'time.libsonnet'),
  watchEvent: (import 'watchEvent.libsonnet'),
}
