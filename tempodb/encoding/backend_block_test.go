package encoding

import (
	"context"
	"testing"

	"github.com/google/uuid"
	"github.com/grafana/tempo/tempodb/backend"
	"github.com/grafana/tempo/tempodb/backend/local"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestV0Block(t *testing.T) {
	// known ids and objs written
	ids := [][]byte{
		{16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196},
		{40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0},
		{46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10},
		{103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173},
		{152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182},
		{181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93},
		{200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71},
		{215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6},
		{217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174},
		{243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184},
	}

	objs := [][]byte{
		{10, 203, 2, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 150, 74, 206, 219, 4, 109, 122, 164, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 180, 102, 146, 216, 159, 111, 72, 50, 42, 4, 116, 101, 115, 116, 18, 204, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 188, 177, 43, 25, 178, 158, 71, 18, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 123, 177, 216, 193, 111, 33, 174, 101, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 158, 55, 20, 123, 226, 174, 126, 25, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 208, 122, 162, 191, 173, 52, 196, 155, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 103, 97, 70, 92, 110, 251, 132, 161, 42, 4, 116, 101, 115, 116},
		{10, 156, 2, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 214, 89, 43, 66, 41, 131, 153, 131, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 33, 162, 94, 18, 57, 236, 69, 33, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 184, 72, 146, 33, 102, 57, 88, 102, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 49, 176, 97, 16, 27, 99, 168, 156, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 93, 130, 95, 93, 117, 85, 223, 202, 42, 4, 116, 101, 115, 116},
		{10, 192, 2, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 125, 9, 41, 50, 173, 1, 68, 200, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 20, 21, 145, 243, 97, 170, 64, 216, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 166, 199, 126, 209, 77, 156, 33, 156, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 215, 211, 244, 36, 131, 81, 117, 59, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 173, 111, 73, 142, 175, 208, 166, 235, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 132, 179, 135, 189, 125, 130, 107, 25, 42, 4, 116, 101, 115, 116},
		{10, 171, 1, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 224, 217, 241, 48, 252, 164, 67, 172, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 175, 250, 174, 164, 188, 93, 228, 58, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 88, 171, 183, 222, 43, 234, 123, 46, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 254, 190, 77, 59, 193, 98, 43, 191, 42, 4, 116, 101, 115, 116},
		{10, 142, 2, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 183, 88, 112, 254, 97, 108, 124, 142, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 215, 40, 117, 161, 5, 225, 78, 234, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 236, 123, 222, 66, 228, 75, 210, 77, 42, 4, 116, 101, 115, 116, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 238, 122, 170, 246, 76, 86, 188, 3, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 158, 48, 115, 206, 230, 131, 99, 167, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 181, 242, 221, 169, 80, 84, 125, 4, 42, 4, 116, 101, 115, 116},
		{10, 233, 1, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 202, 182, 224, 6, 193, 255, 39, 57, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 168, 239, 190, 206, 155, 139, 202, 251, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 248, 96, 23, 51, 214, 236, 33, 149, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 106, 43, 69, 25, 42, 212, 125, 148, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 54, 95, 58, 141, 15, 143, 120, 151, 42, 4, 116, 101, 115, 116},
		{10, 166, 2, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 184, 12, 216, 201, 82, 90, 171, 140, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 214, 56, 55, 2, 21, 81, 219, 141, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 132, 121, 211, 225, 120, 12, 191, 46, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 126, 31, 177, 132, 157, 119, 236, 213, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 71, 243, 120, 164, 196, 165, 243, 32, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 229, 175, 39, 222, 189, 236, 110, 43, 42, 4, 116, 101, 115, 116},
		{10, 239, 2, 18, 204, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 178, 97, 137, 232, 29, 4, 34, 131, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 55, 23, 165, 110, 221, 192, 160, 40, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 255, 33, 152, 234, 35, 209, 110, 4, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 159, 237, 241, 121, 41, 125, 215, 228, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 123, 33, 83, 11, 209, 60, 228, 31, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 60, 136, 41, 7, 131, 99, 142, 255, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 36, 134, 173, 187, 85, 141, 244, 222, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 109, 191, 88, 66, 87, 69, 186, 237, 42, 4, 116, 101, 115, 116},
		{10, 197, 1, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 209, 179, 98, 216, 7, 146, 117, 59, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 197, 56, 100, 136, 32, 217, 135, 221, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 1, 149, 223, 89, 180, 177, 114, 30, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 106, 185, 93, 46, 105, 97, 210, 107, 42, 4, 116, 101, 115, 116},
		{10, 240, 2, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 242, 14, 37, 144, 89, 71, 101, 140, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 120, 249, 254, 149, 218, 227, 128, 148, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 182, 122, 214, 91, 241, 87, 153, 229, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 66, 149, 192, 69, 19, 107, 202, 31, 42, 4, 116, 101, 115, 116, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 166, 108, 97, 15, 115, 108, 174, 174, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 110, 178, 35, 42, 253, 81, 19, 100, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 58, 192, 48, 92, 242, 102, 135, 57, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 58, 37, 61, 17, 129, 47, 123, 252, 42, 4, 116, 101, 115, 116},
	}

	meta := backend.NewBlockMeta("fake", uuid.MustParse("00f5a116-639e-4880-bbe7-be9b0c828033"), "v0", backend.EncNone, "")
	testLegacyBlock(t, ids, objs, meta, "./v0test")
}

func TestV1Block(t *testing.T) {
	// known ids and objs written
	// ids
	ids := [][]byte{
		{7, 181, 32, 87, 247, 90, 139, 174, 135, 136, 79, 120, 177, 222, 2, 240},
		{43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104},
		{139, 115, 127, 10, 183, 236, 28, 14, 205, 146, 78, 83, 199, 254, 59, 66},
		{152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75},
		{155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100},
		{177, 113, 228, 126, 108, 183, 201, 29, 39, 94, 23, 79, 145, 35, 136, 168},
		{187, 141, 81, 83, 57, 213, 3, 189, 119, 201, 108, 224, 214, 254, 8, 18},
		{204, 31, 216, 84, 105, 92, 127, 69, 68, 6, 112, 145, 248, 21, 77, 47},
		{249, 23, 213, 96, 174, 168, 1, 205, 236, 15, 35, 167, 188, 85, 2, 129},
		{254, 194, 143, 72, 47, 111, 185, 207, 119, 108, 182, 108, 53, 236, 148, 1},
	}

	// objs
	objs := [][]byte{
		{10, 124, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 7, 181, 32, 87, 247, 90, 139, 174, 135, 136, 79, 120, 177, 222, 2, 240, 18, 8, 223, 202, 199, 5, 30, 66, 42, 121, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 7, 181, 32, 87, 247, 90, 139, 174, 135, 136, 79, 120, 177, 222, 2, 240, 18, 8, 213, 22, 235, 114, 248, 2, 15, 5, 42, 4, 116, 101, 115, 116},
		{10, 243, 1, 18, 240, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 19, 10, 173, 53, 159, 62, 87, 227, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 75, 255, 196, 169, 79, 170, 231, 130, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 128, 103, 57, 170, 190, 25, 42, 90, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 151, 10, 24, 67, 55, 149, 194, 9, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 188, 191, 205, 204, 170, 190, 214, 207, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 43, 228, 225, 47, 230, 26, 49, 235, 125, 2, 157, 59, 159, 131, 149, 104, 18, 8, 0, 211, 43, 161, 174, 196, 162, 84, 42, 4, 116, 101, 115, 116},
		{10, 62, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 139, 115, 127, 10, 183, 236, 28, 14, 205, 146, 78, 83, 199, 254, 59, 66, 18, 8, 238, 182, 190, 164, 48, 174, 207, 159, 42, 4, 116, 101, 115, 116},
		{10, 233, 1, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75, 18, 8, 188, 210, 167, 65, 55, 94, 244, 67, 42, 4, 116, 101, 115, 116, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75, 18, 8, 7, 83, 29, 250, 195, 224, 225, 86, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75, 18, 8, 251, 153, 103, 196, 130, 171, 50, 94, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75, 18, 8, 180, 78, 138, 68, 163, 251, 142, 70, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 129, 201, 91, 214, 83, 191, 111, 68, 107, 77, 91, 148, 221, 245, 75, 18, 8, 125, 60, 6, 36, 213, 187, 76, 27, 42, 4, 116, 101, 115, 116},
		{10, 167, 2, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 239, 18, 145, 158, 245, 154, 211, 252, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 95, 62, 196, 231, 112, 154, 32, 212, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 6, 229, 148, 34, 64, 207, 210, 240, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 169, 182, 18, 39, 191, 39, 191, 109, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 37, 167, 154, 197, 184, 209, 32, 65, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 155, 134, 159, 15, 136, 207, 117, 209, 56, 126, 60, 167, 252, 218, 112, 100, 18, 8, 166, 145, 10, 156, 255, 0, 24, 234, 42, 4, 116, 101, 115, 116},
		{10, 62, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 177, 113, 228, 126, 108, 183, 201, 29, 39, 94, 23, 79, 145, 35, 136, 168, 18, 8, 131, 188, 169, 203, 125, 28, 141, 188, 42, 4, 116, 101, 115, 116},
		{10, 0},
		{10, 124, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 204, 31, 216, 84, 105, 92, 127, 69, 68, 6, 112, 145, 248, 21, 77, 47, 18, 8, 84, 61, 184, 21, 180, 10, 137, 2, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 204, 31, 216, 84, 105, 92, 127, 69, 68, 6, 112, 145, 248, 21, 77, 47, 18, 8, 187, 203, 10, 147, 246, 208, 134, 9, 42, 4, 116, 101, 115, 116},
		{10, 160, 1, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 249, 23, 213, 96, 174, 168, 1, 205, 236, 15, 35, 167, 188, 85, 2, 129, 18, 8, 119, 138, 44, 178, 184, 249, 13, 247, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 249, 23, 213, 96, 174, 168, 1, 205, 236, 15, 35, 167, 188, 85, 2, 129, 18, 8, 73, 158, 36, 70, 185, 20, 76, 58, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 249, 23, 213, 96, 174, 168, 1, 205, 236, 15, 35, 167, 188, 85, 2, 129, 18, 8, 186, 48, 111, 239, 223, 38, 224, 157, 42, 4, 116, 101, 115, 116},
		{10, 171, 1, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 254, 194, 143, 72, 47, 111, 185, 207, 119, 108, 182, 108, 53, 236, 148, 1, 18, 8, 81, 60, 43, 213, 53, 43, 227, 73, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 254, 194, 143, 72, 47, 111, 185, 207, 119, 108, 182, 108, 53, 236, 148, 1, 18, 8, 59, 151, 39, 249, 104, 123, 88, 255, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 254, 194, 143, 72, 47, 111, 185, 207, 119, 108, 182, 108, 53, 236, 148, 1, 18, 8, 57, 194, 103, 45, 66, 100, 68, 244, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 254, 194, 143, 72, 47, 111, 185, 207, 119, 108, 182, 108, 53, 236, 148, 1, 18, 8, 249, 10, 208, 37, 0, 47, 102, 244, 42, 4, 116, 101, 115, 116},
	}

	meta := backend.NewBlockMeta("fake", uuid.MustParse("b51766bd-a395-448b-9684-7a4fdbd053aa"), "v1", backend.EncZstd, "")
	testLegacyBlock(t, ids, objs, meta, "./v1test")
}

func TestV2Block(t *testing.T) {
	// known ids and objs written
	// ids
	ids := [][]byte{
		{0x0c, 0xdb, 0x24, 0xe0, 0x4e, 0x57, 0x8d, 0x7f, 0x37, 0x7c, 0x0c, 0xa5, 0x00, 0x0d, 0xf5, 0x58},
		{0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x04, 0x68, 0x2f, 0x02},
		{0x1c, 0xab, 0x29, 0x93, 0x6f, 0x47, 0xec, 0xb8, 0x0b, 0x1b, 0x07, 0xda, 0xf2, 0xf7, 0xcf, 0xc0},
		{0x1d, 0xc5, 0xac, 0x5f, 0x57, 0x72, 0xaf, 0xf0, 0xf3, 0x53, 0xb1, 0xc8, 0x3b, 0xb9, 0x27, 0x38},
		{0x24, 0x34, 0x83, 0x30, 0x58, 0xef, 0x73, 0xb1, 0xdb, 0xe9, 0xc8, 0xca, 0x2d, 0xc2, 0xd1, 0x5c},
		{0x5b, 0x36, 0x83, 0x13, 0x0b, 0x32, 0x34, 0x0c, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35},
		{0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x02, 0x0b, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9},
		{0x9b, 0xc2, 0x5c, 0x22, 0x81, 0x1b, 0x8b, 0xfd, 0x73, 0x0f, 0xfd, 0xa6, 0x94, 0xf7, 0x28, 0x37},
		{0xb4, 0xc7, 0x3c, 0x0e, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x07, 0x4e, 0xc8, 0x64},
		{0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x01, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc},
	}

	// objs
	objs := [][]byte{
		{0xa, 0xba, 0x1, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xc, 0xdb, 0x24, 0xe0, 0x4e, 0x57, 0x8d, 0x7f, 0x37, 0x7c, 0xc, 0xa5, 0x0, 0xd, 0xf5, 0x58, 0x12, 0x8, 0xdb, 0xae, 0xdd, 0xd0, 0x81, 0xfe, 0xb1, 0x9c, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xc, 0xdb, 0x24, 0xe0, 0x4e, 0x57, 0x8d, 0x7f, 0x37, 0x7c, 0xc, 0xa5, 0x0, 0xd, 0xf5, 0x58, 0x12, 0x8, 0xf, 0xf8, 0x88, 0xcd, 0xbe, 0x58, 0xca, 0xf5, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xc, 0xdb, 0x24, 0xe0, 0x4e, 0x57, 0x8d, 0x7f, 0x37, 0x7c, 0xc, 0xa5, 0x0, 0xd, 0xf5, 0x58, 0x12, 0x8, 0xb9, 0x4c, 0x9b, 0xd4, 0xb1, 0xcf, 0xa, 0x3d, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x9c, 0x2, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x4, 0x68, 0x2f, 0x2, 0x12, 0x8, 0xc5, 0x98, 0xb, 0xa3, 0x54, 0x84, 0x19, 0x2f, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x60, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x4, 0x68, 0x2f, 0x2, 0x12, 0x8, 0xf5, 0x9c, 0x1, 0xe5, 0xfb, 0x89, 0xa6, 0x32, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x4, 0x68, 0x2f, 0x2, 0x12, 0x8, 0x40, 0x83, 0xeb, 0xca, 0x49, 0x4f, 0x7, 0x28, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x4, 0x68, 0x2f, 0x2, 0x12, 0x8, 0xc2, 0x75, 0xd5, 0xb0, 0xd4, 0x86, 0xba, 0x98, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x12, 0x4f, 0x2c, 0x9b, 0x97, 0xb9, 0x20, 0xe1, 0x17, 0x5c, 0xa7, 0x51, 0x4, 0x68, 0x2f, 0x2, 0x12, 0x8, 0xf3, 0xf5, 0xa1, 0x7b, 0x4c, 0xcf, 0xd0, 0xb1, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x0},
		{0xa, 0x7c, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x1d, 0xc5, 0xac, 0x5f, 0x57, 0x72, 0xaf, 0xf0, 0xf3, 0x53, 0xb1, 0xc8, 0x3b, 0xb9, 0x27, 0x38, 0x12, 0x8, 0xe0, 0xc7, 0xd9, 0xe, 0xdb, 0x10, 0xd1, 0xe7, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x1d, 0xc5, 0xac, 0x5f, 0x57, 0x72, 0xaf, 0xf0, 0xf3, 0x53, 0xb1, 0xc8, 0x3b, 0xb9, 0x27, 0x38, 0x12, 0x8, 0x5d, 0x4a, 0xa5, 0x17, 0x8d, 0x72, 0x8e, 0x53, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x62, 0x12, 0x60, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x24, 0x34, 0x83, 0x30, 0x58, 0xef, 0x73, 0xb1, 0xdb, 0xe9, 0xc8, 0xca, 0x2d, 0xc2, 0xd1, 0x5c, 0x12, 0x8, 0x61, 0xa1, 0xf8, 0xdb, 0xd7, 0x32, 0xb, 0xfb, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x24, 0x34, 0x83, 0x30, 0x58, 0xef, 0x73, 0xb1, 0xdb, 0xe9, 0xc8, 0xca, 0x2d, 0xc2, 0xd1, 0x5c, 0x12, 0x8, 0x4f, 0xd7, 0x25, 0x38, 0x2c, 0xcf, 0xfc, 0xf5, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0xa3, 0x3, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x80, 0x65, 0x64, 0x92, 0x13, 0xf0, 0x93, 0xc6, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x84, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x6d, 0xeb, 0x5c, 0xab, 0xbd, 0x55, 0x23, 0x10, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0xd5, 0x74, 0xca, 0x3d, 0x2f, 0x53, 0xa1, 0x88, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x23, 0xdd, 0xaf, 0x16, 0x8c, 0xb7, 0x80, 0x58, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x7c, 0x58, 0x6e, 0x89, 0xed, 0x11, 0x20, 0x3d, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x9b, 0x59, 0x80, 0x47, 0x49, 0x88, 0xe5, 0xc, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x60, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x59, 0xed, 0xa6, 0x31, 0x9c, 0xd, 0xff, 0x2a, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x5b, 0x36, 0x83, 0x13, 0xb, 0x32, 0x34, 0xc, 0x9d, 0x8a, 0xa5, 0xe6, 0x1e, 0x43, 0xd5, 0x35, 0x12, 0x8, 0x61, 0x5f, 0x4b, 0x5c, 0x2e, 0x6f, 0xa7, 0x9e, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0xef, 0x2, 0x12, 0xcc, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x3c, 0x5b, 0x93, 0x57, 0xfe, 0xb0, 0x4, 0x9e, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x31, 0xfd, 0x9b, 0x12, 0x50, 0x5b, 0xf8, 0xb0, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x1b, 0xd0, 0xe, 0xea, 0x57, 0xcb, 0x87, 0x9c, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x74, 0xf5, 0x8, 0xc9, 0x66, 0x62, 0x8d, 0x91, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x85, 0x3a, 0xf4, 0x90, 0xaa, 0xea, 0x68, 0xec, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0xc0, 0x9c, 0xe9, 0xb1, 0xf8, 0x5b, 0x41, 0x7a, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x60, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x5f, 0xab, 0xe3, 0x55, 0x45, 0x6b, 0x35, 0x2f, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x7a, 0xbf, 0xf6, 0x87, 0x13, 0x95, 0x1a, 0x4a, 0x2, 0xb, 0x53, 0xb7, 0x53, 0x2d, 0xff, 0xb9, 0x12, 0x8, 0x90, 0xf2, 0xe8, 0xb9, 0x81, 0x19, 0x98, 0x32, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x87, 0x1, 0x12, 0x84, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0x9b, 0xc2, 0x5c, 0x22, 0x81, 0x1b, 0x8b, 0xfd, 0x73, 0xf, 0xfd, 0xa6, 0x94, 0xf7, 0x28, 0x37, 0x12, 0x8, 0xed, 0x80, 0x7b, 0x4a, 0x9c, 0x47, 0x3a, 0x88, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x9b, 0xc2, 0x5c, 0x22, 0x81, 0x1b, 0x8b, 0xfd, 0x73, 0xf, 0xfd, 0xa6, 0x94, 0xf7, 0x28, 0x37, 0x12, 0x8, 0xf9, 0xd7, 0x69, 0xb1, 0xc, 0xff, 0x8e, 0x98, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0x9b, 0xc2, 0x5c, 0x22, 0x81, 0x1b, 0x8b, 0xfd, 0x73, 0xf, 0xfd, 0xa6, 0x94, 0xf7, 0x28, 0x37, 0x12, 0x8, 0x1f, 0xc8, 0xcb, 0x70, 0x50, 0xf1, 0x50, 0xb9, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x94, 0x3, 0x12, 0x60, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0xdf, 0xf, 0x69, 0xcc, 0xb1, 0xff, 0x68, 0x60, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0x59, 0x6, 0xaa, 0x2d, 0x79, 0x3b, 0x48, 0x56, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0xa8, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0x13, 0x4b, 0xb7, 0x34, 0xfb, 0xe3, 0xd3, 0x1a, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0xdb, 0x54, 0xf7, 0x68, 0x53, 0x3e, 0x59, 0x67, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0x7a, 0x0, 0xaf, 0xc5, 0x32, 0xcd, 0x84, 0xfe, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0x94, 0x3e, 0x2b, 0xff, 0xe3, 0xd1, 0xf8, 0x81, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x84, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0xf4, 0x16, 0xa7, 0x17, 0x75, 0x7a, 0xc1, 0x6, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0xf0, 0x81, 0x28, 0xe6, 0xd8, 0x84, 0x50, 0x3c, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xb4, 0xc7, 0x3c, 0xe, 0xba, 0x1d, 0xce, 0xb5, 0xd7, 0x4c, 0x2d, 0x99, 0x7, 0x4e, 0xc8, 0x64, 0x12, 0x8, 0xd9, 0x6c, 0x69, 0xb2, 0x7e, 0xc8, 0xc5, 0xfa, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
		{0xa, 0x8a, 0x3, 0x12, 0x84, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0x36, 0x46, 0x5a, 0xdc, 0x8, 0xcf, 0x9e, 0xd3, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0xd5, 0xe1, 0x3b, 0x85, 0x39, 0xaf, 0xf6, 0x7d, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0x41, 0x29, 0x97, 0x11, 0x5c, 0x88, 0xd2, 0x99, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0x20, 0xc1, 0x71, 0xbd, 0x3f, 0xa2, 0x47, 0x1d, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x84, 0x1, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0x1c, 0x45, 0xdc, 0x4, 0x68, 0x37, 0xe, 0xc4, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0x76, 0x94, 0x9, 0xc, 0x7b, 0x63, 0x93, 0xe, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0xc4, 0x93, 0xab, 0x2f, 0xc, 0x42, 0xc3, 0x98, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74, 0x12, 0x3c, 0xa, 0x16, 0xa, 0xd, 0x73, 0x75, 0x70, 0x65, 0x72, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x5, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x12, 0x22, 0xa, 0x10, 0xd4, 0x8e, 0xcb, 0x34, 0x9d, 0x47, 0x1, 0x50, 0x23, 0x7d, 0x89, 0x86, 0x13, 0x82, 0x1d, 0xfc, 0x12, 0x8, 0xd3, 0x6d, 0x52, 0x24, 0x75, 0x7, 0xf0, 0xc7, 0x2a, 0x4, 0x74, 0x65, 0x73, 0x74},
	}

	meta := backend.NewBlockMeta("fake", uuid.MustParse("4cd3c468-6398-481b-b5ec-de56d1048427"), "v2", backend.EncSnappy, "")
	testLegacyBlock(t, ids, objs, meta, "./v2test")
}

func testLegacyBlock(t *testing.T, ids [][]byte, objs [][]byte, meta *backend.BlockMeta, path string) {
	r, _, _, err := local.New(&local.Config{
		Path: path,
	})
	require.NoError(t, err, "error creating backend")

	reader := backend.NewReader(r)
	meta, err = reader.BlockMeta(context.Background(), meta.BlockID, meta.TenantID)
	require.NoError(t, err, "error retrieving meta")

	backendBlock, err := NewBackendBlock(meta, reader)
	require.NoError(t, err, "error creating backendblock")

	// test Find
	for i, id := range ids {
		foundBytes, err := backendBlock.Find(context.Background(), id)
		assert.NoError(t, err)

		assert.Equal(t, objs[i], foundBytes)
	}

	// test Iterator
	iterator, err := backendBlock.Iterator(10)
	require.NoError(t, err, "error getting iterator")
	i := 0
	for {
		id, obj, err := iterator.Next(context.Background())
		if id == nil {
			break
		}

		assert.NoError(t, err)
		assert.Equal(t, []byte(id), ids[i])
		assert.Equal(t, obj, objs[i])
		i++
	}
	assert.Equal(t, len(ids), i)
}
