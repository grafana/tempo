package encoding

import (
	"context"
	"testing"

	"github.com/google/uuid"
	"github.com/grafana/tempo/tempodb/backend"
	"github.com/grafana/tempo/tempodb/backend/local"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestV0Block(t *testing.T) {
	r, _, _, err := local.New(&local.Config{
		Path: "./v0test",
	})
	require.NoError(t, err, "error creating backend")

	meta := backend.NewBlockMeta("fake", uuid.MustParse("00f5a116-639e-4880-bbe7-be9b0c828033"), "v0", backend.EncNone)
	backendBlock, err := NewBackendBlock(meta, r)
	require.NoError(t, err, "error creating backendblock")

	// known ids and objs written
	ids := [][]byte{
		{16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196},
		{40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0},
		{46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10},
		{103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173},
		{152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182},
		{181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93},
		{200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71},
		{215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6},
		{217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174},
		{243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184},
	}

	reqs := [][]byte{
		{10, 203, 2, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 150, 74, 206, 219, 4, 109, 122, 164, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 180, 102, 146, 216, 159, 111, 72, 50, 42, 4, 116, 101, 115, 116, 18, 204, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 188, 177, 43, 25, 178, 158, 71, 18, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 123, 177, 216, 193, 111, 33, 174, 101, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 158, 55, 20, 123, 226, 174, 126, 25, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 208, 122, 162, 191, 173, 52, 196, 155, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 16, 111, 36, 117, 80, 230, 19, 105, 233, 250, 193, 80, 212, 8, 189, 196, 18, 8, 103, 97, 70, 92, 110, 251, 132, 161, 42, 4, 116, 101, 115, 116},
		{10, 156, 2, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 214, 89, 43, 66, 41, 131, 153, 131, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 33, 162, 94, 18, 57, 236, 69, 33, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 184, 72, 146, 33, 102, 57, 88, 102, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 49, 176, 97, 16, 27, 99, 168, 156, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 40, 151, 115, 145, 49, 230, 63, 74, 53, 61, 135, 99, 47, 177, 62, 0, 18, 8, 93, 130, 95, 93, 117, 85, 223, 202, 42, 4, 116, 101, 115, 116},
		{10, 192, 2, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 125, 9, 41, 50, 173, 1, 68, 200, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 20, 21, 145, 243, 97, 170, 64, 216, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 166, 199, 126, 209, 77, 156, 33, 156, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 215, 211, 244, 36, 131, 81, 117, 59, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 173, 111, 73, 142, 175, 208, 166, 235, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 46, 249, 86, 100, 236, 250, 162, 29, 153, 203, 70, 100, 52, 32, 77, 10, 18, 8, 132, 179, 135, 189, 125, 130, 107, 25, 42, 4, 116, 101, 115, 116},
		{10, 171, 1, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 224, 217, 241, 48, 252, 164, 67, 172, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 175, 250, 174, 164, 188, 93, 228, 58, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 88, 171, 183, 222, 43, 234, 123, 46, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 103, 211, 223, 182, 235, 26, 7, 204, 60, 17, 217, 123, 123, 198, 170, 173, 18, 8, 254, 190, 77, 59, 193, 98, 43, 191, 42, 4, 116, 101, 115, 116},
		{10, 142, 2, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 183, 88, 112, 254, 97, 108, 124, 142, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 215, 40, 117, 161, 5, 225, 78, 234, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 236, 123, 222, 66, 228, 75, 210, 77, 42, 4, 116, 101, 115, 116, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 238, 122, 170, 246, 76, 86, 188, 3, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 158, 48, 115, 206, 230, 131, 99, 167, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 152, 49, 19, 49, 88, 182, 158, 219, 184, 13, 139, 46, 45, 251, 185, 182, 18, 8, 181, 242, 221, 169, 80, 84, 125, 4, 42, 4, 116, 101, 115, 116},
		{10, 233, 1, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 202, 182, 224, 6, 193, 255, 39, 57, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 168, 239, 190, 206, 155, 139, 202, 251, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 248, 96, 23, 51, 214, 236, 33, 149, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 106, 43, 69, 25, 42, 212, 125, 148, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 181, 244, 211, 60, 179, 68, 182, 170, 109, 224, 254, 122, 156, 5, 215, 93, 18, 8, 54, 95, 58, 141, 15, 143, 120, 151, 42, 4, 116, 101, 115, 116},
		{10, 166, 2, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 184, 12, 216, 201, 82, 90, 171, 140, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 214, 56, 55, 2, 21, 81, 219, 141, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 132, 121, 211, 225, 120, 12, 191, 46, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 126, 31, 177, 132, 157, 119, 236, 213, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 71, 243, 120, 164, 196, 165, 243, 32, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 200, 83, 237, 115, 65, 11, 95, 213, 90, 145, 228, 35, 235, 82, 122, 71, 18, 8, 229, 175, 39, 222, 189, 236, 110, 43, 42, 4, 116, 101, 115, 116},
		{10, 239, 2, 18, 204, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 178, 97, 137, 232, 29, 4, 34, 131, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 55, 23, 165, 110, 221, 192, 160, 40, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 255, 33, 152, 234, 35, 209, 110, 4, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 159, 237, 241, 121, 41, 125, 215, 228, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 123, 33, 83, 11, 209, 60, 228, 31, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 60, 136, 41, 7, 131, 99, 142, 255, 42, 4, 116, 101, 115, 116, 18, 96, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 36, 134, 173, 187, 85, 141, 244, 222, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 215, 18, 237, 192, 104, 131, 114, 53, 150, 214, 22, 191, 114, 112, 13, 6, 18, 8, 109, 191, 88, 66, 87, 69, 186, 237, 42, 4, 116, 101, 115, 116},
		{10, 197, 1, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 209, 179, 98, 216, 7, 146, 117, 59, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 197, 56, 100, 136, 32, 217, 135, 221, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 1, 149, 223, 89, 180, 177, 114, 30, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 217, 231, 141, 253, 253, 67, 177, 62, 155, 17, 238, 201, 125, 219, 145, 174, 18, 8, 106, 185, 93, 46, 105, 97, 210, 107, 42, 4, 116, 101, 115, 116},
		{10, 240, 2, 18, 168, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 242, 14, 37, 144, 89, 71, 101, 140, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 120, 249, 254, 149, 218, 227, 128, 148, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 182, 122, 214, 91, 241, 87, 153, 229, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 66, 149, 192, 69, 19, 107, 202, 31, 42, 4, 116, 101, 115, 116, 18, 132, 1, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 166, 108, 97, 15, 115, 108, 174, 174, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 110, 178, 35, 42, 253, 81, 19, 100, 42, 4, 116, 101, 115, 116, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 58, 192, 48, 92, 242, 102, 135, 57, 42, 4, 116, 101, 115, 116, 18, 60, 10, 22, 10, 13, 115, 117, 112, 101, 114, 32, 108, 105, 98, 114, 97, 114, 121, 18, 5, 48, 46, 48, 46, 49, 18, 34, 10, 16, 243, 118, 208, 197, 255, 90, 18, 238, 97, 201, 254, 157, 90, 95, 172, 184, 18, 8, 58, 37, 61, 17, 129, 47, 123, 252, 42, 4, 116, 101, 115, 116},
	}

	// test Find
	for i, id := range ids {
		foundBytes, err := backendBlock.Find(context.Background(), id)
		assert.NoError(t, err)

		assert.Equal(t, reqs[i], foundBytes)
	}

	// test Iterator
	iterator, err := backendBlock.Iterator(10)
	require.NoError(t, err, "error getting iterator")
	i := 0
	for {
		id, obj, err := iterator.Next()
		if id == nil {
			break
		}

		assert.NoError(t, err)
		assert.Equal(t, ids[i], []byte(id))
		assert.Equal(t, reqs[i], obj)
		i++
	}
	assert.Equal(t, len(ids), i)
}
