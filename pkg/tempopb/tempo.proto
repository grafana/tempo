syntax="proto3";

package tempopb;

import "trace/v1/trace.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service Pusher {
  rpc Push(PushRequest) returns (PushResponse) {};
  rpc PushBytes(PushBytesRequest) returns (PushResponse) {};
}

service Querier {
  rpc FindTraceByID(TraceByIDRequest) returns (TraceByIDResponse) {};
}

// Read
message TraceByIDRequest {
  bytes traceID = 1;
  string blockStart = 2;
  string blockEnd = 3;
  string queryMode = 5;
}

message TraceByIDResponse {
  Trace trace = 1;
}

message Trace {
  repeated tempopb.trace.v1.ResourceSpans batches = 1;
}

// Write
message PushRequest {
  tempopb.trace.v1.ResourceSpans batch = 1;
}

message PushResponse {
}

message PushBytesRequest {
  // pre-marshalled PushRequests
  repeated bytes requests = 1 [(gogoproto.nullable) = false, (gogoproto.customtype) = "PreallocBytes", deprecated=true];

  // pre-marshalled Traces. length must match ids
  repeated bytes traces = 2 [(gogoproto.nullable) = false, (gogoproto.customtype) = "PreallocBytes"];
  // trace ids. length must match traces
  repeated bytes ids = 3 [(gogoproto.nullable) = false, (gogoproto.customtype) = "PreallocBytes"];
}

message TraceBytes {
  // pre-marshalled Traces
  repeated bytes traces = 1;
}