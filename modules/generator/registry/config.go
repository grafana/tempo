package registry

import (
	"flag"
	"time"
)

type Config struct {
	// CollectionInterval controls how often to collect metrics.
	// Defaults to 15s.
	CollectionInterval time.Duration `yaml:"collection_interval"`

	// StaleDuration controls how quickly series become stale and are deleted from the registry.
	// An active series is deleted if it hasn't been updated for a more than the stale duration.
	// Defaults to 15m.
	StaleDuration time.Duration `yaml:"stale_duration"`

	// ExternalLabels are added to any time series generated by this instance.
	ExternalLabels map[string]string `yaml:"external_labels,omitempty"`

	InjectTenantIDAs string `yaml:"inject_tenant_id_as,omitempty"`

	// MaxLabelNameLength configures the maximum length of label names. Label names exceeding
	// this limit will be truncated.
	MaxLabelNameLength int `yaml:"max_label_name_length"`

	// MaxLabelValueLength configures the maximum length of label values. Label values exceeding
	// this limit will be truncated.
	MaxLabelValueLength int `yaml:"max_label_value_length"`
	
	// RemoteWriteEndpoint is the URL to send metrics to via Prometheus remote write protocol.
	// If specified, metrics will be sent to this endpoint instead of using the provided appender.
	RemoteWriteEndpoint string `yaml:"remote_write_endpoint,omitempty"`
}

// RegisterFlagsAndApplyDefaults registers the flags.
func (cfg *Config) RegisterFlagsAndApplyDefaults(string, *flag.FlagSet) {
	cfg.CollectionInterval = 15 * time.Second
	cfg.StaleDuration = 15 * time.Minute
	cfg.MaxLabelNameLength = 1024
	cfg.MaxLabelValueLength = 2048
}
